{"version":3,"sources":["BooksAPI.js","components/Header.js","components/BookCover.js","components/BookShelfChanger.js","components/BookTop.js","components/BookDetail.js","components/BookCard.js","components/BookGrid.js","components/BookShelfTitle.js","components/BookShelf.js","components/BookList.js","components/Dashboard.js","components/SearchBar.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Header","react_default","a","createElement","className","BookCover","_ref","image","style","width","height","backgroundImage","BookShelfChanger","shelves","onChange","name","value","e","disabled","length","map","index","shelfName","title","key","BookTop","imageLinks","thumbnail","components_BookCover","components_BookShelfChanger","BookDetail","authors","Fragment","author","BookCard","components_BookTop","components_BookDetail","BookGrid","components_BookCard","BookShelfTitle","BookShelf","components_BookShelfTitle","components_BookGrid","BookList","shelfBooks","filter","components_BookShelf","Dashboard","components_Header","components_BookList","react_router_dom","to","SearchBar","state","searchedBooks","checkAddedBooks","arguments","undefined","stateBooks","stateBookIDs","addedBook","notAddedBooks","error","searchedBook","includes","stateBook","push","_this","setState","handleUpdateQuery","BooksAPI","props","_this2","this","type","target","placeholder","React","Component","BooksApp","changeShelf","toConsumableArray","sameShelfBooks","b","changedShelfBook","currentTarget","updatedBooks","_this$state","react_router","path","exact","render","components_Dashboard","assign","components_SearchBar","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.67d35a03.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react';\n\n\nconst Header = () => {\n    return (\n        <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\n\nconst BookCover = ({image}) => {\n    return (\n        <div className=\"book-cover\" style={{\n            width: 128,\n            height: 193,\n            backgroundImage: `url(${image})`\n        }}></div>\n    );\n};\n\nBookCover.propTypes = {\n    image: PropTypes.string.isRequired,\n};\n\nexport default BookCover;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\n\nconst BookShelfChanger = ({book, shelves, onChange}) => {\n    return (\n        <div className=\"book-shelf-changer\">\n            <select name={\"shelf\"} value={book.shelf} onChange={(e) => onChange(e, book)}>\n                <option value=\"move\" disabled>Move to...</option>\n                {shelves.length !== 0 && shelves.map((shelf, index) => {\n                    const shelfName = shelf.id === 'currentlyReading'\n                        ? shelf.title : shelf.id === 'wantToRead'\n                            ? shelf.title : shelf.title;\n                    return <option key={index} value={shelf.id}>{shelfName}</option>;\n                })}\n                <option value=\"none\">None</option>\n            </select>\n        </div>\n    );\n};\n\nBookShelfChanger.propTypes = {\n    book: PropTypes.object.isRequired,\n    shelves: PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default BookShelfChanger;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport BookCover from \"./BookCover\";\nimport BookShelfChanger from \"./BookShelfChanger\";\n\n\nconst BookTop = ({book, shelves, onChange}) => {\n    const image = book.imageLinks ? book.imageLinks.thumbnail : '';\n    return (\n        <div className=\"book-top\">\n            <BookCover image={image}/>\n            <BookShelfChanger book={book} shelves={shelves} onChange={onChange}/>\n        </div>\n    );\n};\n\nBookTop.propTypes = {\n    book: PropTypes.object.isRequired,\n    shelves: PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default BookTop;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\n\nconst BookDetail = ({title, authors}) => {\n    return (\n        <React.Fragment>\n            <div className=\"book-title\">{title}</div>\n            <div className=\"book-authors\">\n                {authors && authors.map((author, index) => <p key={index}>{author}</p>)}\n            </div>\n        </React.Fragment>\n    );\n};\n\nBookDetail.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default BookDetail;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport BookTop from \"./BookTop\";\nimport BookDetail from \"./BookDetail\";\n\n\nconst BookCard = ({book, shelves, onChange}) => {\n    return (\n        <div className=\"book\">\n            <BookTop book={book} shelves={shelves} onChange={onChange}/>\n            <BookDetail title={book.title} authors={book.authors}/>\n        </div>\n    );\n};\n\nBookCard.propTypes = {\n    book: PropTypes.object.isRequired,\n    shelves: PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default BookCard;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport BookCard from \"./BookCard\";\n\n\nconst BookGrid = ({books, shelves, onChange}) => {\n    return (\n        <div className=\"bookshelf-books\">\n            <ol className=\"books-grid\">\n                {books.map(book => <li key={book.id}><BookCard book={book} shelves={shelves} onChange={onChange}/></li>)}\n            </ol>\n        </div>\n    );\n};\n\nBookGrid.propTypes = {\n    books: PropTypes.array.isRequired,\n    shelves: PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default BookGrid;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\n\nconst BookShelfTitle = ({title}) => {\n    return <h2 className=\"bookshelf-title\">{title}</h2>;\n};\n\nBookShelfTitle.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default BookShelfTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BookGrid from \"./BookGrid\";\nimport BookShelfTitle from \"./BookShelfTitle\";\n\n\nconst BookShelf = ({title, books, shelves, onChange}) => {\n    return (\n        <div className=\"bookshelf\">\n            <BookShelfTitle title={title}/>\n            <BookGrid books={books} shelves={shelves} onChange={onChange}/>\n        </div>\n    );\n};\n\nBookShelf.propTypes = {\n    title: PropTypes.string.isRequired,\n    books: PropTypes.array.isRequired,\n    shelves: PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default BookShelf;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport BookShelf from \"./BookShelf\";\n\n\nconst BookList = ({books, shelves, onChange}) => {\n    return (\n        <div className=\"list-books-content\">\n            <div>\n                {shelves.map((shelf, index) => {\n                    const title = shelf.id === 'currentlyReading'\n                        ? shelf.title : shelf.id === 'wantToRead'\n                            ? shelf.title : shelf.title;\n                    const shelfBooks = books.filter(book => book.shelf === shelf.id);\n                    return <BookShelf\n                        key={index}\n                        title={title} books={shelfBooks} shelves={shelves} onChange={onChange}/>;\n                })}\n            </div>\n        </div>\n    );\n};\n\nBookList.propTypes = {\n    books: PropTypes.array.isRequired,\n    shelves: PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default BookList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from \"react-router-dom\";\n\nimport Header from \"./Header\";\nimport BookList from \"./BookList\";\n\n\nconst Dashboard = ({books, shelves, onChange}) => {\n    return (\n        <div className=\"list-books\">\n            <Header/>\n            <BookList books={books} shelves={shelves} onChange={onChange}/>\n            <Link to={'/search'} className=\"open-search\">Add a book</Link>\n        </div>\n    );\n};\n\nDashboard.propTypes = {\n    books: PropTypes.array.isRequired,\n    shelves: PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\n\nimport * as BooksAPI from '../BooksAPI'\n\nimport BookCard from \"./BookCard\";\n\n\nclass SearchBar extends React.Component {\n\n    state = {\n        query: '',\n        searchedBooks: [],\n    }\n\n    checkAddedBooks = (searchedBooks=[], stateBooks) => {\n        const stateBookIDs = stateBooks.map(book => book.id);\n        const addedBook = [];\n        const notAddedBooks = [];\n\n        (!searchedBooks.error && searchedBooks.length !== 0) && searchedBooks.map(searchedBook => {\n            if (!stateBookIDs.includes(searchedBook.id)) {\n                searchedBook.shelf = 'none';\n                notAddedBooks.push(searchedBook);\n            } else {\n                stateBooks.length !== 0 && stateBooks.map(stateBook => {\n                    if (stateBook.id === searchedBook.id) {\n                        searchedBook.shelf = stateBook.shelf;\n                        addedBook.push(searchedBook);\n                    }\n                    return stateBook;\n                });\n            }\n            return searchedBook;\n        });\n        !searchedBooks.error ? this.setState({searchedBooks: [...addedBook, ...notAddedBooks]})\n            : this.setState({searchedBooks});\n    };\n\n    handleUpdateQuery = (query) => {\n        if (this.state.query !== '' && query !== '') {\n            this.setState({ query: query });\n            BooksAPI.search(query).then(searchedBooks => {\n                return this.checkAddedBooks(searchedBooks, this.props.books);\n            });\n        } else {\n            BooksAPI.search(query).then(() => this.setState({ searchedBooks: [] }));\n            this.setState({query: query});\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                    <Link to={'/'} className={\"close-search\"}>Close</Link>\n                    <div className=\"search-books-input-wrapper\">\n                        <input type=\"text\"\n                               name={\"query\"}\n                               value={this.state.query}\n                               onChange={e => this.handleUpdateQuery(e.target.value)}\n                               placeholder=\"Search by title or author\"/>\n\n                    </div>\n                </div>\n                <div className=\"search-books-results\">\n                    <ol className=\"books-grid\">\n                        {this.state.searchedBooks.error ? <div>No results found</div>\n                            : this.state.searchedBooks.map(book =>\n                                <li key={book.id}>\n                                    <BookCard book={book} shelves={this.props.shelves} onChange={this.props.onChange}/>\n                                </li>)}\n                    </ol>\n                </div>\n            </div>\n        );\n    }\n}\n\nSearchBar.propTypes = {\n    books: PropTypes.array.isRequired,\n    shelves: PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport {\n    Switch,\n    Redirect,\n    Route,\n} from \"react-router-dom\";\n\nimport * as BooksAPI from './BooksAPI';\n\nimport Dashboard from \"./components/Dashboard\";\nimport SearchBar from \"./components/SearchBar\";\n\nimport './App.css'\n\n\nclass BooksApp extends React.Component {\n    state = {\n        books: [],\n        shelves: [\n            {\n                title: 'Currently Reading',\n                id: 'currentlyReading',\n            },\n            {\n                title: 'Want To Read',\n                id: 'wantToRead',\n            },\n            {\n                title: 'Read',\n                id: 'read',\n            },\n        ],\n    }\n\n    async componentDidMount() {\n        const books = await BooksAPI.getAll();\n        this.setState({books});\n    }\n\n    changeShelf = (e, book) => {\n        const books = [...this.state.books];\n        const sameShelfBooks = books.filter(b => b.id !== book.id);\n        const changedShelfBook = books.filter(b => b.id === book.id)[0] || book;\n        changedShelfBook.shelf = e.currentTarget.value;\n        const updatedBooks = [...sameShelfBooks, changedShelfBook];\n        BooksAPI.update(book, e.currentTarget.value).then(() => this.setState({books: updatedBooks}))\n    };\n\n    render() {\n        const {books, shelves} = this.state;\n        return (\n            <div className=\"app\">\n                <Switch>\n                    <Route path=\"/\" exact render={\n                        (props) => <Dashboard books={books} shelves={shelves} onChange={this.changeShelf} {...props} />\n                    }/>\n                    <Route path=\"/search\" render={\n                        (props) => <SearchBar books={books} shelves={shelves} onChange={this.changeShelf} {...props} />\n                    }/>\n                    <Redirect to={'/'}/>\n                </Switch>\n            </div>\n        )\n    }\n}\n\nexport default BooksApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nimport App from './App';\n\nimport './index.css';\n\n\nconst Root = () => {\n    return (\n        <Router>\n            <App/>\n        </Router>\n    );\n};\n\nReactDOM.render(<Root/>, document.getElementById('root'));\n"],"sourceRoot":""}